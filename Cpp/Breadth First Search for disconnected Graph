#include<bits/stdc++.h>
#include <iostream>
#include <queue>
using namespace std;
void bfs(int**edges,int n,int sv,bool*visited){
    
    
   
    queue <int>q;
    q.push(sv);
    visited[sv]=true;
    while(!q.empty()){
        int curr = q.front();
        cout<<curr<<" ";
        q.pop();
        for(int i=0;i<n;i++){
            if(sv == i){
                continue;
            }
            if(edges[curr][i]==1 && visited[i]==false){
                q.push(i);
                visited[i]=true;
            }
        }
            
    }
}

 
int main(){
    
    int n;
    int e;
   cin>>n>>e;
    int**edges=new int*[n];
    for(int i=0;i<n;i++){
        edges[i]=new int[n];
        for(int j=0;j<n;j++){
            edges[i][j]=0;
            
        }
    }
    int f;int s;
    for(int i=0;i<e;i++){
        cin>>f>>s;
        edges[f][s]=1;
        edges[s][f]=1;
    }
    bool*visited= new bool[n];
    for(int i=0;i<n;i++){
         visited[i]=false;
    }
    
    for(int i=0;i<n;i++){
        if(!visited[i])
    bfs(edges,n,i,visited);
    }
    return 0;
}
